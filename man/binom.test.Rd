% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/binom.test.R
\name{binom.test}
\alias{binom.test}
\title{Exact Tests for Proportions}
\usage{
binom.test(x, n = NULL, p = 0.5, alternative = c("two.sided", "less",
  "greater"), conf.level = 0.95, ci.method = c("Clopper-Pearson",
  "binom.test", "Score", "Wilson", "prop.test", "Wald", "Agresti-Coull",
  "Plus4"), data = NULL, success = NULL, ...)
}
\arguments{
\item{x}{count of successes, length 2 vector of success and failure counts, a formula,
or a character, numeric, or factor vector containing raw data.}

\item{n}{sample size (successes + failures) or a data frame
(for the formula interface)}

\item{p}{probability for null hypothesis}

\item{alternative}{type of alternative hypothesis}

\item{conf.level}{confidence level for confidence interval}

\item{ci.method}{a method to use for computing the confidence interval
(case insensitive and may be abbreviated).  See details below.}

\item{data}{a data frame (if missing, \code{n} may be a data frame)}

\item{success}{level of variable to be considered success.  All other levels are
considered failure.}

\item{...}{additional arguments (often ignored)}
}
\value{
an object of class \code{htest}
}
\description{
The \code{binom.test} function
performs an exact test of a simple null hypothesis about the probability of success in a
Bernoulli experiment from summarized data or from raw data.
The mosaic \code{binom.test} provides wrapper functions around the function of the same name in \pkg{stats}.
These wrappers provide an extended interface (including formulas).
}
\note{
When \code{x} is a 0-1 vector, 0 is treated as failure and 1 as success. Similarly,
for a logical vector \code{TRUE} is treated as success and \code{FALSE} as failure.
}
\examples{
# Several ways to get a confidence interval for the proportion of Old Faithful
# eruptions lasting more than 3 minutes.
data(faithful)
binom.test(faithful$eruptions > 3)
binom.test(97, 272)
binom.test(c(97, 272-97))
faithful$long <- faithful$eruptions > 3
binom.test(faithful$long)
binom.test(resample(1:4, 400), p=.25)
binom.test(~ long, data = faithful)
binom.test(~ long, data = faithful, ci.method = "Wald")
binom.test(~ long, data = faithful, ci.method = "Plus4")
with(faithful, binom.test(~long))
with(faithful, binom.test(long))

}
\seealso{
\code{\link[mosaic:prop.test]{mosaic::prop.test()}}, \code{\link[stats:binom.test]{stats::binom.test()}}
}
\keyword{stats}
